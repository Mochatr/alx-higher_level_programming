# These are the test cases for the 4-print_square

Import module:
    >>> print_square = __import__('4-print_square').print_square

Test case :print 0
    >>> print_square(0)

Test case :print 1
    >>> print_square(1)
    #

Test case 2: print 2
    >>> print_square(2)
    ##
    ##

Test case 3: print 3
    >>> print_square(3)
    ###
    ###
    ###

Test case 4: print 10
    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

Test case 5: negative
    >>> print_square(-5)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

Test case 6: float
    >>> print_square(8.0)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test case 7 : str
    >>> print_square("oohoo")
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test case 8: none
    >>> print_square(None)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test case 9: slded
    >>> print_square(float('slded'))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test case 10: deedd
    >>> print_square(float('deedd'))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Missing one argument:
    >>> print_square()
    Traceback (most recent call last):
    ...
    TypeError: print_square() missing 1 required positional argument: 'size'
